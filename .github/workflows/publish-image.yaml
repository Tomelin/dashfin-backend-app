name: Publish Docker Image to Google Cloud Registry
run-name: publish-image

on:
  push:
    branches:
      - "*"
  #   paths:
  #     - '**.go'
  # pull_request:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: us-central1
  SERVICE: dashfin-backend-app
  REGION: us-central1
  REPOSITORY: cloud-run-source-deploy/dashfin-backend-app

jobs:
  deploy:
    permissions:
      contents: read
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v3'
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY }}

      - name: Print 
        run: |-
          echo  "${{ env.GAR_LOCATION }}-docker.pkg.dev/prospere-app/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" 
          echo us-central1-docker.pkg.dev/prospere-app/cloud-run-source-deploy/dashfin-backend-app/dashfin-backend-app@sha256:58679c0d14102df150e08bbbc018588342b7a09b27b7aa4df5c656ad9c0c1b94

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/prospere-app/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/prospere-app/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"
          
          # Also tag as latest if pushing to main
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            docker tag "${{ env.GAR_LOCATION }}-docker.pkg.dev/prospere-app/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" "${{ env.GAR_LOCATION }}-docker.pkg.dev/prospere-app/${{ env.REPOSITORY }}/${{ env.SERVICE }}:latest"
            docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/prospere-app/${{ env.REPOSITORY }}/${{ env.SERVICE }}:latest"
          fi
